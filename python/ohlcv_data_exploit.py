import pandas as pd
from datetime import datetime
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import plotly.express as px

filepath = 'csv_exports/kucoin_SUSDUSDT_2021-05-22 00:00:00_2021-06-22 00:00:00.csv'

df = pd.read_csv(filepath, sep=";")

print("Start script using", filepath[12:27])

def timestamp_to_datetime(i):
    print("inside timestamp")
    i_fixed = i / 1000
    time_converted = datetime.fromtimestamp(i_fixed)
    # import pdb; pdb.set_trace()
    return time_converted


def replace_timestamp_in_df():
    print("inside replace")
    dt_object = df['timestamp']

    # dt_list = map(timestamp_to_datetime, dt_object)
    # df['timestamp'].replace(dt_list)
    # for i in dt_object
    # import pdb; pdb.set_trace()
    timestamp_values = []
    datetime_values = []
    # for index, timestamp in enumerate(dt_object):
    #     # print("Line {}: {}".format(index, dt_object))
    #     timestamp_values.append(dt_object[index])
    #     import pdb; pdb.set_trace()
    #     datetime_values.append(timestamp_to_datetime(timestamp_values[index]))
    #     import pdb; pdb.set_trace()
    #     print("THATS A ROW(?)", datetime_values)


def plot_ohlcv():
    # format the data to match the charting library
    dates = []
    open_data = []
    high_data = []
    low_data = []
    close_data = []
    volume_data = []
    # import pdb; pdb.set_trace()

    df_without_unnamed = df.iloc[:, 1:]

    for candle in df_without_unnamed.values.tolist():
        # import pdb; pdb.set_trace()
        dates.append(datetime.fromtimestamp(candle[0] / 1000.0).strftime('%Y-%m-%d %H:%M:%S.%f'))
        open_data.append(float(candle[1].replace(',', '.')))
        high_data.append(float(candle[2].replace(',', '.')))
        low_data.append(float(candle[3].replace(',', '.')))
        close_data.append(float(candle[4].replace(',', '.')))
        volume_data.append(float(candle[5].replace(',', '.')))
    # Create figure with secondary y-axis
    fig = make_subplots(specs=[[{"secondary_y": True}]])

    # plot the candlesticks
    fig.add_trace(go.Candlestick(name='<b>Candlesticks</b>', x=dates,
                           open=open_data, high=high_data,
                           low=low_data, close=close_data),
                           secondary_y=True)

    # include a go.Bar trace for volumes
    fig.add_trace(go.Bar(name='<b>Volume Bars</b>', x=dates, y=volume_data),
                    secondary_y=False)


    fig.update_yaxes(title_text="<b>$ Price</b>", secondary_y=True)

    fig.layout.yaxis2.showgrid=False

    fig.show()




def main():
    print("main")
    # replace_timestamp_in_df()
    plot_ohlcv()


if __name__ == '__main__':
    main()

main()
